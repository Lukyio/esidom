# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  pull_request:
    branches: [ develop ]
  # for testing
  push:
    branches: [ feature/setup-cd ]

jobs:
  buildServer:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./server
    strategy:
      matrix:
        node-version: [12.x]
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - run: |
        npm ci
        npm run build --if-present
    # - run: npm run lint
    # - run: npm test

  buildClient:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./client
    strategy:
      matrix:
        node-version: [12.x]
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - run: |
        npm ci
        npm run build --if-present
    # Disabled because linter is broken on client
    # - run: npm run lint
    # - run: npm test

  deployApp:
    needs: [ buildClient, buildServer ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build and launch docker image
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          password: ${{ secrets.DEPLOY_PASSWORD }}
          script: |
            cd esidom
            git pull
            chmod u+x docker_run.sh
            ./docker_run.sh "${{ secrets.HA_HOST }}" "${{ secrets.HA_USER }}" "${{ secrets.HA_PASSWORD }}"