# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  pull_request:
    branches: [ develop ]
  # for testing
  push:
    branches: [ feature/setup-cd ]

jobs:
  buildServer:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./server
    strategy:
      matrix:
        node-version: [12.x]
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - run: |
        npm ci
        npm run build --if-present
    - name: Archive server artifact
      uses: actions/upload-artifact@v2
      with:
        name: server-artifact
        path: ./server/dist
    # - run: npm run lint
    # - run: npm test

  buildClient:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./client
    strategy:
      matrix:
        node-version: [12.x]
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - run: |
        npm ci
        npm run build --if-present
    # Disabled because linter is broken on client
    # - run: npm run lint
    # - run: npm test


  deployApp:
    needs: [ buildClient, buildServer ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: server-artifact
          path: dist-artifact
      - name: Copy via scp
        uses: garygrossgarten/github-action-scp@release
        with:
          local: dist-artifact/server-artifact
          remote: esidom
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          password: ${{ secrets.DEPLOY_PASSWORD }}
          dotfiles: true

  # deployApp:
  #   needs: [ buildClient, buildServer ]
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Copy repo via ssh
  #       uses: garygrossgarten/github-action-scp@release
  #       with:
  #         local: .
  #         remote: esidom
  #         host: ${{ secrets.DEPLOY_HOST }}
  #         username: ${{ secrets.DEPLOY_USER }}
  #         password: ${{ secrets.DEPLOY_PASSWORD }}
  #         dotfiles: true
  #     - name: Build and launch docker image
  #       uses: appleboy/ssh-action@master
  #       with:
  #         host: ${{ secrets.DEPLOY_HOST }}
  #         username: ${{ secrets.DEPLOY_USER }}
  #         password: ${{ secrets.DEPLOY_PASSWORD }}
  #         script: |
  #           cd esidom
  #           docker build -t esidom .
  #           docker rm -f esidom
  #           docker run -p 8080:8080 -p 3000:3000 -d --name esidom esidom